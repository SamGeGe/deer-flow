services:
  nginx:
    image: nginx:alpine
    container_name: deer-flow-nginx
    ports:
      - "4051:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - deer-flow-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: deer-flow-backend
    env_file:
      - .env
    environment:
      - SEARCH_API=${SEARCH_API:-tavily}
      - TAVILY_API_KEY=${TAVILY_API_KEY:-}
      - TZ=Asia/Shanghai
    volumes:
      - ./conf.yaml:/app/conf.yaml
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro
    restart: unless-stopped
    networks:
      - deer-flow-network

  frontend:
    build:
      context: ./web
      dockerfile: Dockerfile
      args:
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-/api}
        - NODE_ENV=production
        - SKIP_ENV_VALIDATION=true
    container_name: deer-flow-frontend
    environment:
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-/api}
      - NODE_ENV=production
      - SKIP_ENV_VALIDATION=true
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - deer-flow-network

networks:
  deer-flow-network:
    driver: bridge
